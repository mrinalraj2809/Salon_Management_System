CREATE TABLE CUSTOMER(
    PHONE_NO        INTEGER,
    F_NAME          VARCHAR(15) NOT NULL,
    L_NAME          VARCHAR(15),
    GENDER          CHAR(1),
    C_ADDRESS       VARCHAR(20),
                    CONSTRAINT CHECK_PHONE CHECK (LENGTH(PHONE_NO)>=10 AND LENGTH(PHONE_NO)<=12),
                    CONSTRAINT CHECK_GENDER CHECK(GENDER in ('M', 'F', 'O')),
                    CONSTRAINT C_PK_1 PRIMARY KEY(PHONE_NO)
);

CREATE TABLE EMPLOYEE(
    PHONE_NO        INTEGER,
    F_NAME          VARCHAR(15) NOT NULL,
    L_NAME          VARCHAR(15),
    DOB             DATE,
    GENDER          CHAR(1) ,
    RATE_OF_PAY     NUMBER(8,2),
    E_ADDRESS       VARCHAR(20),
                    CONSTRAINT CHECK_PHONE_EMPLOYEE CHECK (LENGTH(PHONE_NO)>=10 AND LENGTH(PHONE_NO)<=12),
                    CONSTRAINT CHECK_GENDER_EMPLOYEE CHECK (GENDER in ('M', 'F', 'O')),
                    CONSTRAINT E_PK_1 PRIMARY KEY(PHONE_NO)
);

CREATE TABLE APPOINTMENT(
    APPOINTMENT_ID      VARCHAR(15) NOT NULL,
    APPOINTMENT_DATE    DATE,
    CUSTOMER_ID         INTEGER ,
    SECURITY_DEPOSIT    NUMBER,
    SECONDARY_PAY_LEFT  NUMBER,
                    CONSTRAINT A_PK_1 PRIMARY KEY(APPOINTMENT_ID),
                    CONSTRAINT A_FK_1 FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMER(PHONE_NO)              
);
/*ALTER TABLE APPOINTMENT DROP COLUMN APPOINTMENT_DATE;

ALTER TABLE APPOINTMENT ADD APPOINTMENT_DATE_TIME TIMESTAMP NOT NULL;*/

CREATE TABLE SERVICES(
    SERVICE_ID          VARCHAR(15) NOT NULL,
    SERVICE_NAME        VARCHAR(15) NOT NULL,
    DURATION_MIN        INTEGER,
    SERVICE_CHARGE      NUMBER(8,2),
    AVAILABILITY        INTEGER,
                    CONSTRAINT S_PK_1 PRIMARY KEY(SERVICE_ID)
);


CREATE TABLE MATERIAL(
    MATERIAL_ID         VARCHAR(15),
    MATERIAL_NAME       VARCHAR(15),
    AVAILABILITY        INTEGER,
    PRICE               NUMBER(8,2),
                    CONSTRAINT M_PK_1 PRIMARY KEY(MATERIAL_ID)
);
//ALTER TABLE SERVICES ADD CONSTRAINT S_FK_1 FOREIGN KEY(MATERIAL_ID) REFERENCES MATERIAL(MATERIAL_ID);

CREATE TABLE USES(
    SERVICE_ID          VARCHAR(15),
    MATERIAL_ID         VARCHAR(15),
                    CONSTRAINT USES_FK_1 FOREIGN KEY(SERVICE_ID) REFERENCES SERVICES(SERVICE_ID),
                    CONSTRAINT USES_FK_2 FOREIGN KEY(MATERIAL_ID) REFERENCES MATERIAL(MATERIAL_ID)
);


CREATE TABLE SERVICE_RENDERED(
    APPOINTMENT_ID      VARCHAR(15),
    SERVICE_ID          VARCHAR(15),
    EMPLOYEE_ID         NUMBER(15),
    EXTENDED_PRICE      NUMBER(8,2),
                    CONSTRAINT SR_FK1 FOREIGN KEY(APPOINTMENT_ID) REFERENCES APPOINTMENT(APPOINTMENT_ID),
                    CONSTRAINT SR_FK2 FOREIGN KEY(SERVICE_ID) REFERENCES SERVICES(SERVICE_ID),
                    CONSTRAINT SR_FK3 FOREIGN KEY(EMPLOYEE_ID) REFERENCES EMPLOYEE(PHONE_NO),
                    CONSTRAINT SR_PK1 PRIMARY KEY(APPOINTMENT_ID,SERVICE_ID)
);
/*ALTER TABLE SERVICE_RENDERED DROP CONSTRAINT SR_FK3;
ALTER TABLE SERVICE_RENDERED ADD CONSTRAINT SR_FK3 FOREIGN KEY(EMPLOYEE_ID) REFERENCES EMPLOYEE(PHONE_NO);
*/

CREATE TABLE BILLINGS(
    BILL_ID                 VARCHAR(15),
    TOTAL_AMOUNT            NUMBER(8,2),
    BILL_DATE               DATE,
    TAX_AMOUNT              NUMBER(8,2),
    SELLER_AMOUNT_BALANCE   NUMBER(8,2),
    APPOINTMENT_ID          VARCHAR(15),
    EMPLOYEE_ID             NUMBER(15),
    DISCOUNT                NUMBER(8,2),
                    CONSTRAINT B_PK_1 PRIMARY KEY(BILL_ID),
                    CONSTRAINT B_FK_1 FOREIGN KEY(EMPLOYEE_ID) REFERENCES EMPLOYEE(PHONE_NO),
                    CONSTRAINT B_FK_2 FOREIGN KEY(APPOINTMENT_ID) REFERENCES APPOINTMENT(APPOINTMENT_ID)
);

/*SET TRIGGER ON AVAILABILITY OF SERVICES TABLE*/

/*ALTER TABLE SERVICES ADD  (TO ADD MATERIAL ID)   */

INSERT INTO CUSTOMER VALUES(9470243913,'MRINAL','RAJ','M','M.G. BLOCK');
INSERT INTO CUSTOMER VALUES(7619106154,'MOHIT','SAH','M','BVB BLOCK');
INSERT INTO CUSTOMER VALUES(9886432160,'MOHIT','HOME','M','NEPAL');
INSERT INTO CUSTOMER VALUES(7070549002,'MRIGANK','SRIVASTAVA','M','TUMKUR');
INSERT INTO CUSTOMER VALUES(9113530409,'MRIGANK','HOME','F','PATNA');
INSERT INTO CUSTOMER VALUES(8296707225,'ANISH','','M','BHAGALPUR');

/* deleting all tables
SELECT 'DROP TABLE "' || TABLE_NAME || '" CASCADE CONSTRAINTS;' FROM user_tables;

DROP TABLE "CUSTOMER" CASCADE CONSTRAINTS;
DROP TABLE "EMPLOYEE" CASCADE CONSTRAINTS;
DROP TABLE "APPOINTMENT" CASCADE CONSTRAINTS;
DROP TABLE "SERVICES" CASCADE CONSTRAINTS;
DROP TABLE "MATERIAL" CASCADE CONSTRAINTS;
DROP TABLE "USES" CASCADE CONSTRAINTS;
DROP TABLE "SERVICE_RENDERED" CASCADE CONSTRAINTS;
DROP TABLE "BILLINGS" CASCADE CONSTRAINTS;

*/

/* employee TABLE  */
INSERT INTO EMPLOYEE VALUES(7619196500,'PRANAB','BANSAL','20-FEB-2000','M',15000,'DELHI');
INSERT INTO EMPLOYEE VALUES(9113969452,'PREM','KISORE','8-Mar-1999','M',15000,'PATNA');
INSERT INTO EMPLOYEE VALUES(7892748768,'KASTURI ','C.M','28-FEB-1999','F',16000,'BANGALORE');
INSERT INTO EMPLOYEE VALUES(6360379519,'NAMITA','SHETTY','02-FEB-1999','F',16000,'TUMKUR');
INSERT INTO EMPLOYEE VALUES(9945976371,'NITHISH','NARASHIMHA','3-Dec-2000','M',15000,'TUMKUR');
INSERT INTO EMPLOYEE VALUES(9110812507,'RAKESH','DEOL','08-Jan-1997','M',15000,'MUGALSARAI');

/*APPOINTMENT */
/*
INSERT INTO APPOINTMENT VALUES(111,'9470243913','800','1700','25-DEC-2020 07:30');
INSERT INTO APPOINTMENT VALUES(222,'7619106154','500','200','11-NOV-2020 08:30');
INSERT INTO APPOINTMENT VALUES(333,'7070549002','600','2400','25-OCT-2020 09:30');
INSERT INTO APPOINTMENT VALUES(444,'9886432160','100','100','25-FEB-2020 11:00');
INSERT INTO APPOINTMENT VALUES(555,'9113530409','200','000','25-MAR-2020 12:30');
INSERT INTO APPOINTMENT VALUES(666,'8296707225','150','50','25-MAR-2020 9:00');
/*DELETE FROM APPOINTMENT WHERE APPOINTMENT_ID=666;*/
The default date format for an Oracle date value is derived from the NLS_DATE_FORMAT and NLS_DATE_LANGUAGE initialization parameters.
The date format in the example includes a two-digit number for the day of the month, an abbreviation of the month name, the last two digits of the year, and a 24-hour time designation.
The specification for NLS_DATE_LANGUAGE is included because 'DEC' is not a valid value for MON in all locales.
*/

/*  SERVICES   */
INSERT INTO SERVICES VALUES('SER111','FACIAL',45,2000.00,1);
INSERT INTO SERVICES VALUES('SER222','HAIR CUT',30,200.00,1);
INSERT INTO SERVICES VALUES('SER333','SHAVE ',45,500.00,1);
INSERT INTO SERVICES VALUES('SER444','MASSAGE','50',3000.00,1);
INSERT INTO SERVICES VALUES('SER555','TRIM','15',100.00,1);
INSERT INTO SERVICES VALUES('SER555','NAIL CUT','25',100.00,1);

/*  MATERIAL    */
INSERT INTO MATERIAL VALUES('MAT111','SHAMPOO',9,500.0);
INSERT INTO MATERIAL VALUES('MAT222','LOREAL OIL',10,200.0);
INSERT INTO MATERIAL VALUES('MAT333','SHAVE GEL ',5,400.0);
INSERT INTO MATERIAL VALUES('MAT444','BLACK DYE','15',250.0);
INSERT INTO MATERIAL VALUES('MAT555','BROWN DYE','11',300.0);
INSERT INTO MATERIAL VALUES('MAT666','WAX STRIP','17',100.0);

/*  USES  */
INSERT INTO USES VALUES('SER222','MAT111');
INSERT INTO USES VALUES('SER222','MAT444');
INSERT INTO USES VALUES('SER222','MAT555');
INSERT INTO USES VALUES('SER444','MAT222');
INSERT INTO USES VALUES('SER333','MAT333');
INSERT INTO USES VALUES('SER555','MAT666');

/* SERVICE_RENDERED  */
INSERT INTO SERVICE_RENDERED VALUES(111,'SER111',7619196500,25);
INSERT INTO SERVICE_RENDERED VALUES(111,'SER333',7619196500,25);
INSERT INTO SERVICE_RENDERED VALUES(222,'SER222',9113969452,25); 
INSERT INTO SERVICE_RENDERED VALUES(222,'SER333',9113969452,25); 
INSERT INTO SERVICE_RENDERED VALUES(333,'SER444',7892748768,25);
INSERT INTO SERVICE_RENDERED VALUES(444,'SER222',6360379519,25);
INSERT INTO SERVICE_RENDERED VALUES(555,'SER222',9945976371,25);
INSERT INTO SERVICE_RENDERED VALUES(666,'SER222',9110812507,25);

/*  BILLINGS  */
INSERT INTO BILLINGS (BILL_ID,APPOINTMENT_ID,EMPLOYEE_ID) VALUES('BILL111',111,7619196500);
INSERT INTO BILLINGS (BILL_ID,APPOINTMENT_ID,EMPLOYEE_ID) VALUES('BILL222',222,9113969452);
INSERT INTO BILLINGS (BILL_ID,APPOINTMENT_ID,EMPLOYEE_ID) VALUES('BILL333',333,7892748768);
INSERT INTO BILLINGS (BILL_ID,APPOINTMENT_ID,EMPLOYEE_ID) VALUES('BILL444',444,6360379519);
INSERT INTO BILLINGS (BILL_ID,APPOINTMENT_ID,EMPLOYEE_ID) VALUES('BILL555',555,9945976371);
INSERT INTO BILLINGS (BILL_ID,APPOINTMENT_ID,EMPLOYEE_ID) VALUES('BILL666',666,9110812507);


/*  TODO    */
FIX APPOINTMENT DATE 
CREATE 5 QUERY

/*  Q1: TOTAL SPENT ON EACH APPOINTMENT  */
SELECT (S.SERVICE_CHARGE + SR.EXTENDED_PRICE) AS TOTAL_PRICE
FROM SERVICE_RENDERED SR, APPOINTMENT A, SERVICES S
WHERE SR.SERVICE_ID = S.SERVICE_ID AND SR.APPOINTMENT_ID = A.APPOINTMENT_ID;

/*  Q2: List of the Customers who have used the more than two services and has cost greater than 2000   */
SELECT C.F_NAME, C.L_NAME
FROM CUSTOMER C, APPOINTMENT A
WHERE A.CUSTOMER_ID = C.PHONE_NO AND A.APPOINTMENT_ID IN(
    SELECT SR.APPOINTMENT_ID 
    FROM SERVICE_RENDERED SR, SERVICES S, APPOINTMENT A
    WHERE SR.SERVICE_ID = S.SERVICE_ID AND S.SERVICE_CHARGE>2000
    GROUP BY SR.APPOINTMENT_ID
    HAVING COUNT(*)>=2
);

/*  Q1010: NAME OF ALL THE SERVICES OFFERED AND WAS BOOKED MAXIMUM     
SELECT SERVICE_NAME
FROM SERVICES 
WHERE SERVICE_ID IN(
    SELECT SR.SERVICE_ID
    FROM SERVICE_RENDERED SR, APPOINTMENT A
    WHERE SR.APPOINTMENT_ID = A.APPOINTMENT_ID 
    GROUP BY SR.SERVICE_ID
    HAVING MAX(
        SELECT SR.SERVICE_ID ,S.SERVICE_NAME, COUNT(*) AS SERVICE_BOOKED
        FROM SERVICE_RENDERED SR, APPOINTMENT A, SERVICES S
        WHERE SR.APPOINTMENT_ID = A.APPOINTMENT_ID AND S.SERVICE_ID = SR.SERVICE_ID
        GROUP BY SR.SERVICE_ID
    )
);
*/
/*  Q3 LIST ALL THE SERVICES FOR WHICH THE APPOINTMENT HAS BEEN MADE*/
SELECT S.SERVICE_ID, S.SERVICE_NAME
FROM SERVICES S
WHERE S.SERVICE_ID IN(
    SELECT SR.SERVICE_ID
    FROM SERVICE_RENDERED SR, APPOINTMENT A
    WHERE SR.APPOINTMENT_ID = A.APPOINTMENT_ID
);

/*  Q4 LIST ALL THE FEMALE EMPLOYEE ATTENDING MALE EMPLOYEE   */
SELECT E.F_NAME AS EMPLOYEE, C.F_NAME AS CUSTOMER
FROM CUSTOMER C, EMPLOYEE E, APPOINTMENT A, SERVICE_RENDERED SR
WHERE SR.APPOINTMENT_ID = A.APPOINTMENT_ID AND A.CUSTOMER_ID = C.PHONE_NO AND SR.EMPLOYEE_ID = E.PHONE_NO AND E.GENDER = 'F' AND C.GENDER='M';
